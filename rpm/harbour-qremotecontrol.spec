# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.27
# 

Name:       harbour-qremotecontrol

# >> macros
# << macros

%{!?qtc_qmake:%define qtc_qmake %qmake}
%{!?qtc_qmake5:%define qtc_qmake5 %qmake5}
%{!?qtc_make:%define qtc_make make}
%{?qtc_builddir:%define _builddir %qtc_builddir}
Summary:    Remote control for your desktop
Version:    2.6
Release:    1
Group:      Qt/Qt
License:    GPLv3
URL:        http://qremote.org/
Source0:    %{name}-%{version}.tar.bz2
Source100:  harbour-qremotecontrol.yaml
Requires:   qt5-qtgraphicaleffects >= 5.1
Requires:   sailfishsilica-qt5 >= 0.10.9
BuildRequires:  pkgconfig(sailfishapp) >= 0.0.10
BuildRequires:  pkgconfig(Qt5Core)
BuildRequires:  pkgconfig(Qt5Qml)
BuildRequires:  pkgconfig(Qt5Quick)
BuildRequires:  pkgconfig(Qt5Network)
BuildRequires:  pkgconfig(Qt5Multimedia)
BuildRequires:  pkgconfig(Qt5Sensors)
BuildRequires:  desktop-file-utils

%description
With QRemoteControl installed on your Smartphone you can easily control your computer via WiFi. By using the touchpad of your Phone you can for example open the internet browser and navigate to the pages you want to visit, use the music player or your media center without being next to your PC or laptop. Summurazing QRemoteControl allows you to do almost everything you would be able to do with a mouse and a keyboard, but also from a greater distance.  To make these replacements possible QRemoteControl offers you a touchpad, a keyboard, multimedia keys and buttons for starting applications.  Even powering on the computer via Wake On Lan is supported by this app.
The fresh design makes QRemoteControl an eyecatcher. Moreover serveral color designs for the user interface are aviable to adapt it to your individual flavour. Automatically swiching from portrait to landscape mode is another feature making it pefectly fiting for the user in every situation.

By now the server application is available for Windows, Linux and Mac.

%prep
%setup -q -n %{name}-%{version}

# >> setup
# << setup

%build
# >> build pre
# << build pre

%qtc_qmake5 

%qtc_make %{?_smp_mflags}

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%qmake5_install

# >> install post
# << install post

desktop-file-install --delete-original       \
  --dir %{buildroot}%{_datadir}/applications             \
   %{buildroot}%{_datadir}/applications/*.desktop

%files
%defattr(-,root,root,-)
%{_datadir}/icons/hicolor/86x86/apps/%{name}.png
%{_datadir}/applications/%{name}.desktop
%{_datadir}/%{name}/qml
%{_bindir}
# >> files
# << files
